---
version: 3

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: ""

images:
  base_image:
    name: 'registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest'
    options:
      pull_policy: missing
      tls_verify: false

additional_build_files:
  - src: ./ansible.cfg
    dest: configs

dependencies:
  ansible_core:
    package_pip: ansible-core>=2.13.10
  ansible_runner:
    package_pip: ansible-runner
  galaxy: requirements.yml
  python: requirements.txt
  system: bindep.txt

options:
  package_manager_path: /usr/bin/microdnf

additional_build_steps:
  prepend_base: |
    USER root
    # Install dependencies without replacing system packages
    RUN microdnf upgrade -y && \
        microdnf install -y gcc make pkg-config python3-devel systemd-devel \
        libxml2-devel openssl-devel rpm-build krb5-devel krb5-libs krb5-workstation && \
        python3 -m pip install --upgrade --ignore-installed pip setuptools wheel packaging

  prepend_builder: |
    # Tell pip not to overwrite system packages
    ENV PIP_BREAK_SYSTEM_PACKAGES=0
    # Use --no-deps to prevent pip from attempting to upgrade dependencies
    RUN pip3 install --upgrade --ignore-installed --no-deps packaging wheel setuptools pip

  prepend_final: |
    RUN microdnf upgrade -y \
        && microdnf install -y python39-pip python39-devel gcc \
        && python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel \
        && python3 -m pip install --no-cache-dir ansible-core>=2.13.10 ansible-runner

  append_final: |
    RUN microdnf clean all \
        && rm -rf /var/cache/{dnf,yum} \
        && rm -rf /var/lib/dnf/history.* \
        && rm -rf /var/log/dnf.* /var/log/hawkey.log \
        && rm -rf /var/cache/dnf \
        && rm -rf /root/.cache \
        && rm -rf /etc/ansible/ansible.cfg