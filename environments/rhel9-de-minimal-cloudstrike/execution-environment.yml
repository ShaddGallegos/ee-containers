---
version: 3

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: '--ignore-errors'
  ANSIBLE_GALAXY_CLI_ROLE_OPTS: '--ignore-errors'
  PKGMGR_PRESERVE_CACHE: 'false'

images:
  base_image:
    name: 'registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel9:latest'
    options:
      pull_policy: missing
      tls_verify: false

options:
  package_manager_path: /usr/bin/microdnf

additional_build_files:
  - src: /tmp/ee-containers/_build/configs/ansible.cfg
    dest: configs/ansible.cfg

dependencies:
  ansible_core:
    package_pip: ansible-runner>=2.4.0
  galaxy: requirements.yml
  python: requirements.txt
  system: bindep.txt

additional_build_steps:
  prepend_base: |
    USER root
    RUN microdnf upgrade -y && \
        microdnf install -y gcc make pkg-config python3-devel systemd-devel \
        libxml2-devel openssl-devel rpm-build krb5-devel krb5-libs krb5-workstation && \
        python3 -m pip install --upgrade --ignore-installed pip setuptools wheel && \
        rpm -e ansible-core --nodeps || true && \
        python3 -m pip install --upgrade --ignore-installed ansible-core ansible-runner

  prepend_final: |
    USER root
    RUN microdnf upgrade -y && \
        microdnf install -y python3-pip python3-devel gcc krb5-devel krb5-libs krb5-workstation && \
        python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel && \
        python3 -m pip install --no-cache-dir --upgrade ansible-core ansible-runner

  append_final: |
    USER root
    # Check for any package issues but don't fail the build
    RUN pip3 check || echo "Some packages have issues, but continuing the build"
    RUN microdnf clean all && \
        rm -rf /var/cache/{dnf,yum} && \
        echo "Build completed successfully"

  prepend_builder: |
    RUN pip3 install --upgrade --ignore-installed pip setuptools
    # Create empty requirements-test.txt file to fix ncclient installation
    # Create empty requirements-test.txt file to fix ncclient installation
    # Create empty requirements-test.txt file to fix ncclient installation
    # Create empty requirements-test.txt file to fix ncclient installation
    # Create empty requirements-test.txt file to fix ncclient installation
    RUN touch /requirements-test.txt

  append_builder: |
    RUN pip3 check
