# filepath: /home/sgallego/Downloads/GIT/ee-containers/roles/ee-builder/tasks/authentication.yml
---
# Authentication tasks

- name: Check if credentials file exists
  ansible.builtin.stat:
    path: "{{ user_home }}/.ansible/vars/config"
  register: config_file

- name: Load credentials from file
  ansible.builtin.include_vars:
    file: "{{ user_home }}/.ansible/vars/config"
  when: config_file.stat.exists
  
# Replace the vars_prompt with pause module
- name: Prompt for Red Hat CDN username
  ansible.builtin.pause:
    prompt: "Enter your Red Hat CDN username"
  register: username_prompt
  when: rh_username | default('') == ''

- name: Set username fact
  ansible.builtin.set_fact:
    rh_username: "{{ username_prompt.user_input }}"
  when: username_prompt is defined and username_prompt.user_input is defined

- name: Prompt for Red Hat CDN password
  ansible.builtin.pause:
    prompt: "Enter your Red Hat CDN password"
    echo: false
  register: password_prompt
  when: rh_password | default('') == ''

- name: Set password fact
  ansible.builtin.set_fact:
    rh_password: "{{ password_prompt.user_input }}"
  when: password_prompt is defined and password_prompt.user_input is defined

# Continue with authentication tasks...
- name: Save credentials to file
  ansible.builtin.copy:
    content: |
      ---
      rh_username: "{{ rh_username }}"
      rh_password: "{{ rh_password }}"
      automation_hub_token: "{{ automation_hub_token | default('') }}"
      galaxy_token: "{{ galaxy_token | default('') }}"
    dest: "{{ user_home }}/.ansible/vars/config"
    mode: '0600'
  when: not config_file.stat.exists or username_prompt is defined or password_prompt is defined

- name: Generate token for Automation Hub
  ansible.builtin.shell: |
    curl -s -u "{{ rh_username }}:{{ rh_password }}" \
      -X GET "https://console.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token" \
      -d "grant_type=client_credentials" \
      -d "client_id=automation-hub" \
      -o "{{ authfile }}"
  become: true
  no_log: true
  tags: [authentication, registry]

- name: Ensure container registry authentication is configured
  ansible.builtin.shell: |
    podman login {{ item }}
    --username "{{ rh_username }}"
    --password "{{ rh_password }}"
    --authfile "{{ authfile }}"
  loop: "{{ container_registries }}"
  become: true
  no_log: true
  tags: [authentication, registry]